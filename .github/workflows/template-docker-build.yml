name: Reusable docker build
on:
  workflow_call:
    inputs:
      REGISTRY:
        required: false
        type: string
        default: index.docker.io
      DOCKER_FILE:
        required: true
        type: string
      CREATE_IMAGE_NAME:
        required: true
        type: string
      BASE_IMAGE_NAME:
        required: true
        type: string
      BASE_IMAGE_TAG:
        required: true
        type: string
      PHP_VERSION:
        required: true
        type: string
    secrets:
      REGISTRY_USERNAME:
        required: true
      REGISTRY_PASSWORD:
        required: true

jobs:
  docker_build_and_push:
    name: Build and push base image
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ inputs.CREATE_IMAGE_NAME }}
      cancel-in-progress: true
    steps:
    - name: Check out the repo
      uses: actions/checkout@v4
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ inputs.CREATE_IMAGE_NAME }}
        tags: |
          type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'master') }}
          type=ref,event=tag
          type=ref,event=branch
    - name: Login to Container Registry
      uses: docker/login-action@v2
      with:
#        registry: ${{ inputs.REGISTRY }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        driver-opts: |
          network=host
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        pull: true
        push: true
        file: ${{ inputs.DOCKER_FILE }}
        platforms: linux/amd64,linux/arm64/v8
        build-args: |
          BASE_IMAGE_NAME=${{ inputs.BASE_IMAGE_NAME }}
          BASE_IMAGE_TAG=${{ inputs.BASE_IMAGE_TAG }}
          PHP_VERSION=${{ inputs.PHP_VERSION }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        #          cache-from: type=gha
        #          cache-to: type=gha,mode=max
        cache-from: type=registry,ref=${{ inputs.CREATE_IMAGE_NAME }}:buildcache
        cache-to: type=registry,ref=${{ inputs.CREATE_IMAGE_NAME }}:buildcache,mode=max
