---
name: Reusable docker build
on:
  workflow_call:
    inputs:
      DOCKER_REGISTRY:
        required: false
        type: string
        default: index.docker.io
      DOCKER_FILE:
        required: true
        type: string
      CREATE_IMAGE_NAME:
        required: true
        type: string
      CREATE_IMAGE_CACHE_NAME:
        required: true
        type: string
      BASE_IMAGE_NAME:
        required: true
        type: string
      BASE_IMAGE_TAG:
        required: true
        type: string
      PHP_VERSION:
        required: true
        type: string
    secrets:
      DOCKER_REGISTRY_USERNAME:
        required: true
      DOCKER_REGISTRY_PASSWORD:
        required: true

jobs:
  docker_build_and_push:
    name: Build and push base image
    runs-on: ubuntu-latest
    concurrency:
      group: ${{inputs.DOCKER_REGISTRY}}-${{ inputs.CREATE_IMAGE_NAME }}-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - name: Fix cache ref_name
        run: |
          REF_NAME_TO_FIX=${{github.ref_name}}
          REF_NAME_FIXED=${REF_NAME_TO_FIX/\//-} # replace all dots
          echo CACHE_REF_NAME=${REF_NAME_FIXED} >> $GITHUB_ENV # update GitHub ENV vars
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ inputs.CREATE_IMAGE_NAME }}
          tags: |
            type=ref,event=tag
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=edge,enable=true,branch=$repo.default_branch # Tag edge to default
            type=raw,value=latest,enable={{is_default_branch}} # Only set latest on default branch
      - name: Login to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
          password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            network=host
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          pull: true
          push: true
          file: ${{ inputs.DOCKER_FILE }}
          platforms: linux/amd64,linux/arm64/v8
          build-args: |
            BASE_IMAGE_NAME=${{ inputs.BASE_IMAGE_NAME }}
            BASE_IMAGE_TAG=${{ inputs.BASE_IMAGE_TAG }}
            PHP_VERSION=${{ inputs.PHP_VERSION }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          #          cache-from: type=gha
          #          cache-to: type=gha,mode=max
          cache-from: type=registry,ref=${{ inputs.CREATE_IMAGE_CACHE_NAME }}:buildcache-${{ env.CACHE_REF_NAME }}
          cache-to: type=registry,ref=${{ inputs.CREATE_IMAGE_CACHE_NAME }}:buildcache-${{ env.CACHE_REF_NAME }},mode=max
